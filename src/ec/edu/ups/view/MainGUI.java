/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.edu.ups.view;

import java.beans.PropertyVetoException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;

/**
 *
 * @author edd
 */
public class MainGUI extends javax.swing.JFrame {

    
    
    /**
     * Creates new form MainGUI
     * @param useType
     */
    public MainGUI(char useType) {
        initComponents();
        setSize(1100,900);
        setLocationRelativeTo(null);
        
        this.userType = useType;
        loadMenus();
    }

    public char getUserType() {
        return userType;
    }

    public void setUserType(char userType) {
        this.userType = userType;
    }
    
    public JMenu getHelpJM() {
        return helpJM;
    }

    public void setHelpJM(JMenu helpJM) {
        this.helpJM = helpJM;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopMain = new javax.swing.JDesktopPane();
        mainBar = new javax.swing.JMenuBar();
        myDataJm = new javax.swing.JMenu();
        myDataJMI = new javax.swing.JMenuItem();
        logoutJMI = new javax.swing.JMenuItem();
        addJM = new javax.swing.JMenu();
        addOfficeJMI = new javax.swing.JMenuItem();
        addVehicleJMI = new javax.swing.JMenuItem();
        addCompanyJMI = new javax.swing.JMenuItem();
        createJM = new javax.swing.JMenu();
        creUserJMI = new javax.swing.JMenuItem();
        creVehicleJMI = new javax.swing.JMenuItem();
        creRentalJMI = new javax.swing.JMenuItem();
        creBillJMI = new javax.swing.JMenuItem();
        billJM = new javax.swing.JMenu();
        reservateJM = new javax.swing.JMenu();
        helpJM = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().add(desktopMain, java.awt.BorderLayout.CENTER);

        myDataJm.setText("Mi Perfil");
        myDataJm.setName(""); // NOI18N

        myDataJMI.setText("Mis Datos");
        myDataJMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myDataJMIActionPerformed(evt);
            }
        });
        myDataJm.add(myDataJMI);

        logoutJMI.setText("Cerrar Sesión");
        logoutJMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutJMIActionPerformed(evt);
            }
        });
        myDataJm.add(logoutJMI);

        mainBar.add(myDataJm);

        addJM.setText("Agregar");

        addOfficeJMI.setText("Gestionar Oficina");
        addOfficeJMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOfficeJMIActionPerformed(evt);
            }
        });
        addJM.add(addOfficeJMI);

        addVehicleJMI.setText("Gestionar Vehículos");
        addVehicleJMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVehicleJMIActionPerformed(evt);
            }
        });
        addJM.add(addVehicleJMI);

        addCompanyJMI.setText("Empresa");
        addCompanyJMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCompanyJMIActionPerformed(evt);
            }
        });
        addJM.add(addCompanyJMI);

        mainBar.add(addJM);

        createJM.setText("Crear");

        creUserJMI.setText("Usuario");
        creUserJMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creUserJMIActionPerformed(evt);
            }
        });
        createJM.add(creUserJMI);

        creVehicleJMI.setText("Vehículo");
        creVehicleJMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creVehicleJMIActionPerformed(evt);
            }
        });
        createJM.add(creVehicleJMI);

        creRentalJMI.setText("Alquiler");
        creRentalJMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creRentalJMIActionPerformed(evt);
            }
        });
        createJM.add(creRentalJMI);

        creBillJMI.setText("Factura");
        creBillJMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creBillJMIActionPerformed(evt);
            }
        });
        createJM.add(creBillJMI);

        mainBar.add(createJM);

        billJM.setText("Mis Facturas");
        billJM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billJMActionPerformed(evt);
            }
        });
        mainBar.add(billJM);

        reservateJM.setText("Reservar");
        reservateJM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservateJMActionPerformed(evt);
            }
        });
        mainBar.add(reservateJM);

        helpJM.setText("Ayuda");
        mainBar.add(helpJM);

        setJMenuBar(mainBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void creUserJMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creUserJMIActionPerformed
        try{
            if ( userManagementGUI == null) 
                userManagementGUI = new UserManagementGUI();
            if (userManagementGUI.isVisible()){
                userManagementGUI.setSelected(true);
            }else{
                this.desktopMain.add(userManagementGUI);
                userManagementGUI.setVisible(true);
            }
            
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Error al abrir la ventana");
        }
    }//GEN-LAST:event_creUserJMIActionPerformed

    private void addOfficeJMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOfficeJMIActionPerformed
        
        try{
            if (officeManagementGUI== null) 
                officeManagementGUI = new OfficeManagementGUI();
            if (officeManagementGUI.isVisible()){
//                officeManagementGUI
            }else{
                this.desktopMain.add(officeManagementGUI);
                officeManagementGUI.setVisible(true);
            }
            
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Error al abrir la ventana");
        }
        
    }//GEN-LAST:event_addOfficeJMIActionPerformed

    private void myDataJMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myDataJMIActionPerformed
        // TODO add your handling code here:
        try {
            if (myDataGUI == null)
                myDataGUI = new MyDataGUI(getWidth(), getHeight());
            
            if (myDataGUI.isVisible()){

                    myDataGUI.setSelected(true);

            }else{
                this.desktopMain.add(myDataGUI);
                myDataGUI.setVisible(true);
            }
        } catch (PropertyVetoException ex) {
                JOptionPane.showMessageDialog(null, "Error al abrir la ventana");
        }
    }//GEN-LAST:event_myDataJMIActionPerformed
    /**
     * This method returns back to login and saves all the changes.
     * @param evt 
     */
    private void logoutJMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutJMIActionPerformed
        
        LoginGUI login = new LoginGUI();
        login.setVisible(true);
        
        dispose();
    }//GEN-LAST:event_logoutJMIActionPerformed

    private void addVehicleJMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVehicleJMIActionPerformed
        
        try{
            if (vehicleManagementGUI == null) 
                vehicleManagementGUI = new VehicleManagementGUI();
            if (vehicleManagementGUI.isVisible()){
//                vehicleManagementGUI
            }else{
                this.desktopMain.add(vehicleManagementGUI);
                vehicleManagementGUI.setVisible(true);
            }
            
            
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Error al abrir la ventana");
        }
    }//GEN-LAST:event_addVehicleJMIActionPerformed

    private void addCompanyJMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCompanyJMIActionPerformed
        try{
            if (companyGUI == null) 
                companyGUI = new CompanyGUI();
            if (companyGUI.isVisible()){
//                companyGUI
            }else{
                this.desktopMain.add(companyGUI);
                companyGUI.setVisible(true);
            }
            
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Error al abrir la ventana");
        }
    }//GEN-LAST:event_addCompanyJMIActionPerformed

    private void creVehicleJMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creVehicleJMIActionPerformed
        
        try{
            if (vehicleGUI == null) 
                vehicleGUI = new VehicleGUI();
            if (vehicleGUI.isVisible()){
//                vehicleGUI
            }else{
                this.desktopMain.add(vehicleGUI);
                vehicleGUI.setVisible(true);
            }
            
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Error al abrir la ventana");
        }
        
    }//GEN-LAST:event_creVehicleJMIActionPerformed

    private void creRentalJMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creRentalJMIActionPerformed
        try{
            if (rentalGUI == null) 
                rentalGUI = new RentalGUI();
            if (rentalGUI.isVisible()){
//                rentalGUI
            }else{
                this.desktopMain.add(rentalGUI);
                rentalGUI.setVisible(true);
            }
            
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Error al abrir la ventana");
        }
    }//GEN-LAST:event_creRentalJMIActionPerformed

    private void creBillJMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creBillJMIActionPerformed
        try{
            if (billGUI == null) 
                billGUI = new BillGUI();
            if (billGUI.isVisible()){
//                billGUI
            }else{
                this.desktopMain.add(billGUI);
                billGUI.setVisible(true);
            }
            
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Error al abrir la ventana");
        }
    }//GEN-LAST:event_creBillJMIActionPerformed

    private void billJMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billJMActionPerformed
        try{
            if (myBillGUI == null) 
                myBillGUI = new MyBillGUI();
            if (myBillGUI.isVisible()){
//                myBillGUI
            }else{
                this.desktopMain.add(myBillGUI);
                myBillGUI.setVisible(true);
            }
            
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Error al abrir la ventana");
        }
    }//GEN-LAST:event_billJMActionPerformed

    private void reservateJMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservateJMActionPerformed
        try{
            if (reservateGUI == null) 
                reservateGUI = new ReservateGUI();
            if (reservateGUI.isVisible()){
//                reservateGUI
            }else{
                this.desktopMain.add(reservateGUI);
                reservateGUI.setVisible(true);
            }
            
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Error al abrir la ventana");
        }
    }//GEN-LAST:event_reservateJMActionPerformed

    private boolean loadMenus(){
        
        switch(getUserType()){
            case 'C':
                customerMenu();
                break;
            case 'A':
                adminMenu();
                break;
            case 'E':
                employeeMenu();
                break;
            default:
                dispose();
                return false;
            
            
        }
        return true;
    }
    
    private boolean customerMenu(){
        
        this.addJM.setVisible(false);
        this.createJM.setVisible(false);
        
        
        return true;
    }
    
    private boolean employeeMenu(){
        
        this.addJM.setVisible(false);
        this.creVehicleJMI.setVisible(false);
        this.billJM.setVisible(false);
        this.reservateJM.setVisible(false);
        //this.
        
        return true;
    }
    
    private boolean adminMenu(){
        this.billJM.setVisible(false);
        this.reservateJM.setVisible(false);
        
        return true;
    }
    
    public void aux(){
        desktopMain = new javax.swing.JDesktopPane();
        mainBar = new javax.swing.JMenuBar();
        myDataJm = new javax.swing.JMenu();
        myDataJMI = new javax.swing.JMenuItem();
        logoutJMI = new javax.swing.JMenuItem();
        addJM = new javax.swing.JMenu();
        addOfficeJMI = new javax.swing.JMenuItem();
        addVehicleJMI = new javax.swing.JMenuItem();
        addCompanyJMI = new javax.swing.JMenuItem();
        createJM = new javax.swing.JMenu();
        creUserJMI = new javax.swing.JMenuItem();
        creVehicleJMI = new javax.swing.JMenuItem();
        creRentalJMI = new javax.swing.JMenuItem();
        creBillJMI = new javax.swing.JMenuItem();
        helpJM = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().add(desktopMain, java.awt.BorderLayout.CENTER);

        myDataJm.setText("Mi Perfil");
        myDataJm.setName(""); // NOI18N

        myDataJMI.setText("Mis Datos");
        myDataJMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myDataJMIActionPerformed(evt);
            }
        });
        myDataJm.add(myDataJMI);

        logoutJMI.setText("Cerrar Sesión");
        myDataJm.add(logoutJMI);

        mainBar.add(myDataJm);

        addJM.setText("Agregar");

        addOfficeJMI.setText("Gestionar Oficina");
        addOfficeJMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOfficeJMIActionPerformed(evt);
            }
        });
        addJM.add(addOfficeJMI);

        addVehicleJMI.setText("Gestionar Vehículos");
        addJM.add(addVehicleJMI);

        addCompanyJMI.setText("Empresa");
        addJM.add(addCompanyJMI);

        mainBar.add(addJM);

        createJM.setText("Crear");

        creUserJMI.setText("Usuario");
        creUserJMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creUserJMIActionPerformed(evt);
            }
        });
        createJM.add(creUserJMI);

        creVehicleJMI.setText("Vehículo");
        createJM.add(creVehicleJMI);

        creRentalJMI.setText("Alquiler");
        createJM.add(creRentalJMI);

        creBillJMI.setText("Factura");
        createJM.add(creBillJMI);

        mainBar.add(createJM);

        helpJM.setText("Ayuda");
        mainBar.add(helpJM);

        setJMenuBar(mainBar);
    }
    
    private MyDataGUI myDataGUI;
    private BillGUI billGUI;
    private CompanyGUI companyGUI;
    private MyBillGUI myBillGUI;
    private OfficeManagementGUI officeManagementGUI;
    private RentalGUI rentalGUI;
    private ReservateGUI reservateGUI;
    private UserManagementGUI userManagementGUI;
    private VehicleGUI vehicleGUI;
    private VehicleManagementGUI vehicleManagementGUI;
    private char userType;
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem addCompanyJMI;
    private javax.swing.JMenu addJM;
    private javax.swing.JMenuItem addOfficeJMI;
    private javax.swing.JMenuItem addVehicleJMI;
    private javax.swing.JMenu billJM;
    private javax.swing.JMenuItem creBillJMI;
    private javax.swing.JMenuItem creRentalJMI;
    private javax.swing.JMenuItem creUserJMI;
    private javax.swing.JMenuItem creVehicleJMI;
    private javax.swing.JMenu createJM;
    private javax.swing.JDesktopPane desktopMain;
    private javax.swing.JMenu helpJM;
    private javax.swing.JMenuItem logoutJMI;
    private javax.swing.JMenuBar mainBar;
    private javax.swing.JMenuItem myDataJMI;
    private javax.swing.JMenu myDataJm;
    private javax.swing.JMenu reservateJM;
    // End of variables declaration//GEN-END:variables
    
}

