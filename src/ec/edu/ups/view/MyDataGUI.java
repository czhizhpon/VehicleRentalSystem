/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.edu.ups.view;

import ec.edu.ups.conectionDB.ConnectionJava;
import ec.edu.ups.controller.CustomerController;
import ec.edu.ups.controller.EmployeeController;
import ec.edu.ups.controller.PhoneController;
import ec.edu.ups.controller.UserController;
import ec.edu.ups.model.Customer;
import ec.edu.ups.model.Employee;
import ec.edu.ups.model.Phone;
import ec.edu.ups.model.User;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author edd
 */
public class MyDataGUI extends javax.swing.JInternalFrame {
    
    private ConnectionJava connection;
    private EmployeeController conEmployee;
    private CustomerController conCustomer;
    private PhoneController conPhone;
    private UserController conUser;
    private List<Phone> phones;
    

    /**
     * Creates new form MyDataGUI
     * @param w
     * @param h
     */
    public MyDataGUI(ConnectionJava connection, int w, int h, Employee employee) {
        initComponents();
        super.setLocation(w/2 - getWidth()/2, h/2 - getHeight()/2);
        this.workAddressText.setEditable(false);
        
        this.connection = connection;
        this.conEmployee = new EmployeeController();
        this.conPhone = new PhoneController();
        this.conUser = new UserController();
        
        
        
        setEmployee(employee);
    }
    
    public MyDataGUI(ConnectionJava connection, int w, int h, Customer customer) {
        initComponents();
        super.setLocation(w/2 - getWidth()/2, h/2 - getHeight()/2);
        
        this.connection = connection;
        this.conCustomer = new CustomerController();
        this.conPhone = new PhoneController();
        
        setCustomer(customer);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        impDataPanel = new javax.swing.JPanel();
        userLb = new javax.swing.JLabel();
        userText = new javax.swing.JTextField();
        dniLb = new javax.swing.JLabel();
        dniText = new javax.swing.JTextField();
        passLb = new javax.swing.JLabel();
        passText = new javax.swing.JTextField();
        passConfirmLb = new javax.swing.JLabel();
        acceptButton = new javax.swing.JButton();
        passConfirmText = new javax.swing.JTextField();
        idText = new javax.swing.JTextField();
        dataPanel = new javax.swing.JPanel();
        lastNameText = new javax.swing.JTextField();
        lastnameLb = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        addressLb = new javax.swing.JLabel();
        addressText = new javax.swing.JTextField();
        workAddresLb = new javax.swing.JLabel();
        workAddressText = new javax.swing.JTextField();
        workAddresLb1 = new javax.swing.JLabel();
        phonePanel = new javax.swing.JPanel();
        phoneLb = new javax.swing.JLabel();
        phoneText = new javax.swing.JTextField();
        PhoneCB = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        phonesTable = new javax.swing.JTable();
        createPhoneButton = new javax.swing.JButton();
        deletePhoneButton = new javax.swing.JButton();
        updatePhoneButton = new javax.swing.JButton();
        dateText = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Mis Datos");

        impDataPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        userLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        userLb.setText("Usuario:");
        userLb.setAutoscrolls(true);

        userText.setEditable(false);
        userText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userTextActionPerformed(evt);
            }
        });

        dniLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dniLb.setText("Cédula:");
        dniLb.setAutoscrolls(true);

        dniText.setEditable(false);
        dniText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dniTextActionPerformed(evt);
            }
        });

        passLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        passLb.setText("Contraseña:");
        passLb.setAutoscrolls(true);

        passText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passTextActionPerformed(evt);
            }
        });

        passConfirmLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        passConfirmLb.setText("Confirmar Contraseña:");
        passConfirmLb.setAutoscrolls(true);

        acceptButton.setText("Aceptar Cambios");
        acceptButton.setAutoscrolls(true);
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });

        passConfirmText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passConfirmTextActionPerformed(evt);
            }
        });

        idText.setEditable(false);
        idText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout impDataPanelLayout = new javax.swing.GroupLayout(impDataPanel);
        impDataPanel.setLayout(impDataPanelLayout);
        impDataPanelLayout.setHorizontalGroup(
            impDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(impDataPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(impDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(impDataPanelLayout.createSequentialGroup()
                        .addComponent(userLb, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(userText, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(impDataPanelLayout.createSequentialGroup()
                        .addComponent(dniLb, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dniText, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(66, 66, 66)
                .addGroup(impDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(impDataPanelLayout.createSequentialGroup()
                        .addComponent(passConfirmLb)
                        .addGap(18, 18, 18)
                        .addComponent(passConfirmText, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(acceptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(48, Short.MAX_VALUE))
                    .addGroup(impDataPanelLayout.createSequentialGroup()
                        .addComponent(passLb, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(passText, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107))))
        );
        impDataPanelLayout.setVerticalGroup(
            impDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, impDataPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(impDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userLb)
                    .addComponent(userText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passLb)
                    .addComponent(passText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(impDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dniLb)
                    .addComponent(dniText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passConfirmLb)
                    .addComponent(passConfirmText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acceptButton))
                .addContainerGap())
        );

        getContentPane().add(impDataPanel, java.awt.BorderLayout.NORTH);

        dataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Mis datos"));

        lastNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameTextActionPerformed(evt);
            }
        });

        lastnameLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lastnameLb.setText("Apellido:");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Nombre:");

        nameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextActionPerformed(evt);
            }
        });

        addressLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        addressLb.setText("Dirección:");

        addressText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressTextActionPerformed(evt);
            }
        });

        workAddresLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        workAddresLb.setText("D. Trabajo:");

        workAddressText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workAddressTextActionPerformed(evt);
            }
        });

        workAddresLb1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        workAddresLb1.setText("Nacimiento:");

        phonePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Teléfonos"));

        phoneLb.setText("Número:");

        phoneText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneTextActionPerformed(evt);
            }
        });

        PhoneCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Móvil", "Fijo" }));

        phonesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(phonesTable);

        createPhoneButton.setText("Crear");
        createPhoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPhoneButtonActionPerformed(evt);
            }
        });

        deletePhoneButton.setText("Eliminar");
        deletePhoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePhoneButtonActionPerformed(evt);
            }
        });

        updatePhoneButton.setText("Editar");
        updatePhoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePhoneButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout phonePanelLayout = new javax.swing.GroupLayout(phonePanel);
        phonePanel.setLayout(phonePanelLayout);
        phonePanelLayout.setHorizontalGroup(
            phonePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(phonePanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(phonePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(phonePanelLayout.createSequentialGroup()
                        .addComponent(createPhoneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(updatePhoneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deletePhoneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(phonePanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(phonePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(phonePanelLayout.createSequentialGroup()
                                .addComponent(phoneLb)
                                .addGap(18, 18, 18)
                                .addComponent(phoneText, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(PhoneCB, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                .addContainerGap())
        );
        phonePanelLayout.setVerticalGroup(
            phonePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(phonePanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(phonePanelLayout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addGroup(phonePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(phonePanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(phoneLb))
                    .addComponent(phoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(PhoneCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(phonePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createPhoneButton)
                    .addComponent(updatePhoneButton)
                    .addComponent(deletePhoneButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dateText.setEditable(false);

        javax.swing.GroupLayout dataPanelLayout = new javax.swing.GroupLayout(dataPanel);
        dataPanel.setLayout(dataPanelLayout);
        dataPanelLayout.setHorizontalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dataPanelLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dataPanelLayout.createSequentialGroup()
                        .addComponent(lastnameLb, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(lastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dataPanelLayout.createSequentialGroup()
                        .addComponent(addressLb, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(addressText, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dataPanelLayout.createSequentialGroup()
                        .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(workAddresLb1)
                            .addComponent(workAddresLb, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(workAddressText, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                            .addComponent(dateText))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(phonePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        dataPanelLayout.setVerticalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(phonePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastnameLb)
                    .addComponent(lastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressLb)
                    .addComponent(addressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(workAddresLb)
                    .addComponent(workAddressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(workAddresLb1)
                    .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        getContentPane().add(dataPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userTextActionPerformed

    private void dniTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dniTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dniTextActionPerformed

    private void passTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passTextActionPerformed

    private void passConfirmTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passConfirmTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passConfirmTextActionPerformed

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        
        
        // PARA LA VALIDACION - OJO
        String pass1 = this.passText.getText();
        String pass2 = this.passConfirmText.getText();
        
        //DATOS
        
        User user = new User();
        conUser.readUser(connection, user, this.userText.getText());
        
        if (user.getUseType() == 'C') {
            Customer customer = new Customer();
            this.conCustomer.readUserCustomer(connection, customer, 
                    this.userText.getText());
            
            customer.setUseName(this.nameText.getText());
            customer.setUseLastNamel(this.lastNameText.getText());
            customer.setUseAddress(this.addressText.getText());
            customer.setUseWorkAdd(this.workAddressText.getText());
            
            this.conCustomer.updateCustomer(connection, customer);
            
            
        } else {
            
            Employee employee = new Employee();
            this.conEmployee.readEmployee(connection, employee, 
                    Integer.parseInt(this.idText.getText()));
            
            employee.setUseName(this.nameText.getText());
            employee.setUseLastNamel(this.lastNameText.getText());
            employee.setUseAddress(this.addressText.getText());
            
            this.conEmployee.updateEmployee(connection, employee);
            
        }
        
    }//GEN-LAST:event_acceptButtonActionPerformed

    private void updatePhoneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePhoneButtonActionPerformed
        
        
        try{
            
            
            int index = this.phonesTable.getSelectedRow();
            
            Phone phone;
            
            switch(evt.getActionCommand()){
                case "Editar":
                    

                    if (index < 0) {
                        JOptionPane.showMessageDialog(null, "Seleccione un teléfono.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                        throw new NullPointerException();
                    }

                    phone = this.phones.get(index);

                    this.phoneText.setText(phone.getPhoNumber());

                    if (phone.getPhoType().equals("M")) {

                        this.PhoneCB.setSelectedItem("Móvil");
                    }else{
                        this.PhoneCB.setSelectedItem("Fijo");
                    }

                    this.updatePhoneButton.setActionCommand("Aceptar");
                    this.updatePhoneButton.setText("Aceptar");
                    break;
                case "Aceptar":
                    phone = new Phone();
                    phone.setPhoNumber(this.phoneText.getText());

                    switch(this.PhoneCB.getSelectedItem().toString()){
                        case "Móvil":
                            phone.setPhoType("M");
                            break;
                        case "Fijo":
                            phone.setPhoType("F");
                            break;
                    }
                    
                    phone.setPhoId(this.phones.get(index).getPhoId());
                    
                    this.phones.set(index, phone);
                    
                    
                    if (!this.idText.getText().equals("")) {
                        this.conPhone.updatePhone(connection, phone);
                    }
                    
                    listPhones();
                    
                    this.updatePhoneButton.setActionCommand("Editar");
                    this.updatePhoneButton.setText("Editar");
                    break;
            }
            
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
        
        
        
        
        
    }//GEN-LAST:event_updatePhoneButtonActionPerformed

    private void deletePhoneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePhoneButtonActionPerformed
        
        int index = this.phonesTable.getSelectedRow();
        
        if (index < 0) {
            JOptionPane.showMessageDialog(null, "Seleccione un teléfono.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            throw new NullPointerException();
        }
        
        this.phones.remove(index);
        
        if (!this.idText.getText().equals("")) {
            this.conPhone.deletePhone(connection, 
                    this.phones.get(index).getPhoId());
        }
        
        
        listPhones();
        
    }//GEN-LAST:event_deletePhoneButtonActionPerformed

    private void phoneTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneTextActionPerformed

    private void workAddressTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workAddressTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_workAddressTextActionPerformed

    private void addressTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressTextActionPerformed

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextActionPerformed

    private void lastNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameTextActionPerformed

    private void idTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTextActionPerformed

    private void createPhoneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPhoneButtonActionPerformed
        try{
        Phone phone = new Phone();
            phone.setPhoNumber(this.phoneText.getText());

            switch(this.PhoneCB.getSelectedItem().toString()){
                case "Móvil":
                    phone.setPhoType("M");
                    break;
                case "Fijo":
                    phone.setPhoType("F");
                    break;
            }
        
        if (this.idText.getText().equals("")) {
            if (this.phones == null) {
                this.phones = new ArrayList<>();
            }

            this.phones.add(phone);
            listPhones(Integer.parseInt(this.idText.getText()));
        }else{
            this.conPhone.createUserPhone(connection, phone, 
                    Integer.parseInt(this.idText.getText()));
            this.phones.add(phone);
            listPhones(Integer.parseInt(this.idText.getText()));
        }
        
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
        
    }//GEN-LAST:event_createPhoneButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox PhoneCB;
    private javax.swing.JButton acceptButton;
    private javax.swing.JLabel addressLb;
    private javax.swing.JTextField addressText;
    private javax.swing.JButton createPhoneButton;
    private javax.swing.JPanel dataPanel;
    private javax.swing.JTextField dateText;
    private javax.swing.JButton deletePhoneButton;
    private javax.swing.JLabel dniLb;
    private javax.swing.JTextField dniText;
    private javax.swing.JTextField idText;
    private javax.swing.JPanel impDataPanel;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastNameText;
    private javax.swing.JLabel lastnameLb;
    private javax.swing.JTextField nameText;
    private javax.swing.JLabel passConfirmLb;
    private javax.swing.JTextField passConfirmText;
    private javax.swing.JLabel passLb;
    private javax.swing.JTextField passText;
    private javax.swing.JLabel phoneLb;
    private javax.swing.JPanel phonePanel;
    private javax.swing.JTextField phoneText;
    private javax.swing.JTable phonesTable;
    private javax.swing.JButton updatePhoneButton;
    private javax.swing.JLabel userLb;
    private javax.swing.JTextField userText;
    private javax.swing.JLabel workAddresLb;
    private javax.swing.JLabel workAddresLb1;
    private javax.swing.JTextField workAddressText;
    // End of variables declaration//GEN-END:variables

    private void setEmployee(Employee employee){
        this.idText.setText(""+employee.getUseId());
        this.dniText.setText(employee.getUseDNI());
        this.userText.setText(employee.getUseUsername());
        this.nameText.setText(employee.getUseName());
        this.lastNameText.setText(employee.getUseLastNamel());
        this.addressText.setText(employee.getUseAddress());
        
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(employee.getUseBirthDay());
        
        int day = calendar.get(Calendar.DATE);
        int month = calendar.get(Calendar.MONTH+1);
        int year = calendar.get(Calendar.YEAR);
        
        String mesActual = calendar.getDisplayName(Calendar.MONTH, Calendar.LONG, 
                Locale.getDefault());
        
        this.dateText.setText(day + " / " + mesActual + " / " + year);
        
        listPhones(employee.getUseId());
        
    }
    
    private void setCustomer(Customer customer){
        this.idText.setText(""+customer.getUseId());
        this.dniText.setText(customer.getUseDNI());
        this.userText.setText(customer.getUseUsername());
        this.nameText.setText(customer.getUseName());
        this.lastNameText.setText(customer.getUseLastNamel());
        this.addressText.setText(customer.getUseAddress());
        this.workAddressText.setText(customer.getUseWorkAdd());
        
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(customer.getUseBirthDay());
        
        int day = calendar.get(Calendar.DATE);
        int month = calendar.get(Calendar.MONTH+1);
        int year = calendar.get(Calendar.YEAR);
        
        String mesActual = calendar.getDisplayName(Calendar.MONTH, Calendar.LONG, 
                Locale.getDefault());
        
        this.dateText.setText(day + " / " + mesActual + " / " + year);
        
        
        listPhones(customer.getUseId());
    }
    
    private void listPhones(int useID){
        
        DefaultTableModel tableModel = new DefaultTableModel();
        phones = new ArrayList<>();
        
        String [] colums = {"Número", "Tipo"}; 
        String [][] rows;
        
        try{
            
            this.conPhone.getUserPhones(connection, phones, useID);
            int n = phones.size();
            
            rows = new String[n][2];
            
            for (int i = 0; i < n; i++) {
                rows[i][0] = "" + phones.get(i).getPhoType();
                rows[i][1] = phones.get(i).getPhoNumber();
            }
            
            tableModel.setDataVector(rows, colums);
            this.phonesTable.setModel(tableModel);
        } catch(Exception e){
            System.out.println(e.toString());
        }
        
    }

    
    private void listPhones(){
     DefaultTableModel tableModel = new DefaultTableModel();
        
        String [] colums = {"Número", "Tipo"}; 
        String [][] rows;
        
        int n = this.phones.size();
        
        rows = new String[n][2];
        
        for (int i = 0; i < n; i++) {
            rows[i][0] = this.phones.get(i).getPhoType();
            rows[i][1] = this.phones.get(i).getPhoNumber();
        }
        
        tableModel.setDataVector(rows, colums);
        this.phonesTable.setModel(tableModel);
    }
}
