/**
 * @(#)ReservateGUI.java    0.1.0, 25-Jul-2019 
 * 
 * Universidad Politécnica Salesiana
 * Carrera de Computación
 * Cuenca - Ecuador	
 */
package ec.edu.ups.view;

import ec.edu.ups.conectionDB.ConnectionJava;
import ec.edu.ups.controller.CityController;
import ec.edu.ups.controller.OfficeController;
import ec.edu.ups.controller.ProvinceController;
import ec.edu.ups.controller.ReservationController;
import ec.edu.ups.controller.VehicleController;
import ec.edu.ups.model.Brand;
import ec.edu.ups.model.City;
import ec.edu.ups.model.Model;
import ec.edu.ups.model.Office;
import ec.edu.ups.model.Province;
import ec.edu.ups.model.Reservation;
import ec.edu.ups.model.Vehicle;
import ec.edu.ups.services.Services;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 * @since   22-Jul-2019
 * @version 0.1.0
 * @author  Sarmiento Bryan, Serpa Roberto, Zhizhpon Eduardo
 */
public class ReservateGUI extends javax.swing.JInternalFrame {
    
    private Services services;
    private ConnectionJava connection;

//    private ProvinceController conProvince;
//    
//    private CityController conCity;
    
    private OfficeController conOffiece;
    private VehicleController conVehicle;
    private ReservationController  conReservation;
    
    
    List<Province> provinces;
    List<City> cities;
    List<Office> offices;
    List<Brand> brands;
    List<Model> models;
    List<Vehicle> vehicles;
    
    /**
     * Creates new form ReservateGUI
     */
    public ReservateGUI() {
        
        initComponents();
        ProvinceController conProvince = new ProvinceController();
        
        provinces = new ArrayList<>();
            
            conProvince.getProvinces(connection, provinces);
            
            int n = provinces.size();
            
            for (int i = 0; i < n; i++) {
                provinceComboBox.addItem(provinces.get(i).getProName());
            }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        dataPanel = new javax.swing.JPanel();
        provinceLabel = new javax.swing.JLabel();
        cityLabel = new javax.swing.JLabel();
        officeLabel = new javax.swing.JLabel();
        brandLabel = new javax.swing.JLabel();
        modelLabel = new javax.swing.JLabel();
        reservateLabel = new javax.swing.JLabel();
        endDateLabel = new javax.swing.JLabel();
        provinceComboBox = new javax.swing.JComboBox<String>();
        cityComboBox = new javax.swing.JComboBox<String>();
        officeComboBox = new javax.swing.JComboBox<String>();
        brandComboBox = new javax.swing.JComboBox<String>();
        modelComboBox = new javax.swing.JComboBox<String>();
        reservateButton = new javax.swing.JButton();
        dateReservateTxt = new javax.swing.JTextField();
        dateEndTxt = new javax.swing.JTextField();
        vehiclesPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        VehiclesTable = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setTitle("Reserva");

        dataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));

        provinceLabel.setText("Provincia:");

        cityLabel.setText("Ciudad:");

        officeLabel.setText("Oficina:");

        brandLabel.setText("Marca:");

        modelLabel.setText("Modelo:");

        reservateLabel.setText("Fecha Reserva:");

        endDateLabel.setText("Fecha Final:");

        provinceComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provinceComboBoxActionPerformed(evt);
            }
        });

        cityComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityComboBoxActionPerformed(evt);
            }
        });

        officeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                officeComboBoxActionPerformed(evt);
            }
        });

        brandComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brandComboBoxActionPerformed(evt);
            }
        });

        modelComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelComboBoxActionPerformed(evt);
            }
        });

        reservateButton.setText("Reservar");
        reservateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservateButtonActionPerformed(evt);
            }
        });

        dateReservateTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateReservateTxtActionPerformed(evt);
            }
        });

        dateEndTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateEndTxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dataPanelLayout = new javax.swing.GroupLayout(dataPanel);
        dataPanel.setLayout(dataPanelLayout);
        dataPanelLayout.setHorizontalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reservateLabel)
                    .addComponent(endDateLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(modelLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(brandLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(officeLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cityLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(provinceLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(reservateButton)
                    .addComponent(provinceComboBox, 0, 285, Short.MAX_VALUE)
                    .addComponent(cityComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(officeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(brandComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(modelComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateReservateTxt)
                    .addComponent(dateEndTxt))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        dataPanelLayout.setVerticalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(provinceLabel)
                    .addComponent(provinceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityLabel)
                    .addComponent(cityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(officeLabel)
                    .addComponent(officeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(brandLabel)
                    .addComponent(brandComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modelLabel)
                    .addComponent(modelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reservateLabel)
                    .addComponent(dateReservateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endDateLabel)
                    .addComponent(dateEndTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(reservateButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        vehiclesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Vehículos Disponibles"));

        VehiclesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "MARCA", "MODELO", "PRECIO / DÍA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(VehiclesTable);

        javax.swing.GroupLayout vehiclesPanelLayout = new javax.swing.GroupLayout(vehiclesPanel);
        vehiclesPanel.setLayout(vehiclesPanelLayout);
        vehiclesPanelLayout.setHorizontalGroup(
            vehiclesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, vehiclesPanelLayout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        vehiclesPanelLayout.setVerticalGroup(
            vehiclesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, vehiclesPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(dataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(vehiclesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vehiclesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reservateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservateButtonActionPerformed
        try {
            // ver de la tabla seleccionar vehiculo
            int index = VehiclesTable.getSelectedRow();
            
            Date dateIni = new SimpleDateFormat("dd/MM/yyyy").parse(dateReservateTxt.getText());
            Date dateEnd = new SimpleDateFormat("dd/MM/yyyy").parse(dateEndTxt.getText());
            
            Reservation reservation = new Reservation();
            reservation.setResCustomer(null);
            reservation.setResDateFin(dateEnd);
            reservation.setResDateIni(dateIni);
            reservation.setResVehicle(vehicles.get(index));
            
            conReservation.createReservation(connection, reservation);
            
        } catch (ParseException ex) {
            System.out.println(ex.toString());
        }
        
    }//GEN-LAST:event_reservateButtonActionPerformed

    private void modelComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelComboBoxActionPerformed

        DefaultTableModel tableModel = new DefaultTableModel();
        int indice = this.modelComboBox.getItemCount();

        vehicles = new ArrayList<>();
        
        String [] colums = {"Color", "Marca", "Modelo", "Precio" }; 
        String [][] rows;
        
        try{
            this.conVehicle.getVehicles(connection, vehicles, models.get(indice));
            int n = vehicles.size();
        
            rows = new String[n][4];

            for (int i = 0; i < n; i++) {
                rows[i][0] = vehicles.get(i).getVehColor();
                rows[i][1] = vehicles.get(i).getVehModel().getModBrand().getBraName();
                rows[i][2] = vehicles.get(i).getVehModel().getModName();
                rows[i][3] = "" + vehicles.get(i).getVehCategory().getCatDayCost();
            }

            tableModel.setDataVector(rows, colums);


            this.VehiclesTable.setModel(tableModel);
        } catch(Exception e){
            System.out.println(e.toString());
        }

    }//GEN-LAST:event_modelComboBoxActionPerformed

    private void brandComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brandComboBoxActionPerformed

        try {

            int indice = this.brandComboBox.getItemCount();
            models = new ArrayList<>();

            conVehicle.getConModel().getModels(connection, models,
                this.brands.get(indice));

            int n = models.size();

            for (int i = 0; i < n; i++) {
                modelComboBox.addItem(models.get(i).getModName());
            }

        } catch (Exception e) {
            System.out.println(e.toString());
        }

    }//GEN-LAST:event_brandComboBoxActionPerformed

    private void officeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_officeComboBoxActionPerformed

        try {

            //int indice = this.provinceComboBox.getItemCount();
            brands = new ArrayList<>();

            conVehicle.getConModel().getConBrand().getBrands(connection, brands);

            int n = brands.size();

            for (int i = 0; i < n; i++) {
                brandComboBox.addItem(brands.get(i).getBraName());
            }

        } catch (Exception e) {
            System.out.println(e.toString());
        }

    }//GEN-LAST:event_officeComboBoxActionPerformed

    private void cityComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityComboBoxActionPerformed

        try {

            int indice = this.cityComboBox.getItemCount();
            offices = new ArrayList<>();

            conOffiece.getOffices(connection, offices, cities.get(indice).getCitId());

            int n = offices.size();

            for (int i = 0; i < n; i++) {
                officeComboBox.addItem(offices.get(i).getOffNumber());
            }

        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_cityComboBoxActionPerformed

    private void provinceComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provinceComboBoxActionPerformed

        try {

            int indice = this.provinceComboBox.getItemCount();
            cities = new ArrayList<>();

            conOffiece.getOffCity().getCities(connection, cities,
                this.provinces.get(indice));

            int n = cities.size();

            for (int i = 0; i < n; i++) {
                cityComboBox.addItem(cities.get(i).getCitName());
            }

        } catch (Exception e) {
            System.out.println(e.toString());
        }

    }//GEN-LAST:event_provinceComboBoxActionPerformed

    private void dateReservateTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateReservateTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateReservateTxtActionPerformed

    private void dateEndTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateEndTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateEndTxtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable VehiclesTable;
    private javax.swing.JComboBox<String> brandComboBox;
    private javax.swing.JLabel brandLabel;
    private javax.swing.JComboBox<String> cityComboBox;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JPanel dataPanel;
    private javax.swing.JTextField dateEndTxt;
    private javax.swing.JTextField dateReservateTxt;
    private javax.swing.JLabel endDateLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> modelComboBox;
    private javax.swing.JLabel modelLabel;
    private javax.swing.JComboBox<String> officeComboBox;
    private javax.swing.JLabel officeLabel;
    private javax.swing.JComboBox<String> provinceComboBox;
    private javax.swing.JLabel provinceLabel;
    private javax.swing.JButton reservateButton;
    private javax.swing.JLabel reservateLabel;
    private javax.swing.JPanel vehiclesPanel;
    // End of variables declaration//GEN-END:variables
}
